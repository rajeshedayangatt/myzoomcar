{"ast":null,"code":"var _jsxFileName = \"/home/techmaven/Downloads/test-20200727T053430Z-001/test/src/components/admin/brand/managebrand.js\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getBrands } from \"../../../redux/action/admin/brand/action\";\nimport axios from \"axios\";\n\nclass ManageBrand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.removeBrand = this.removeBrand.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.props.listbrand.length);\n    this.props.loadBrands().then(() => {\n      console.log(\"listbrand:\", this.props.listbrand[0]);\n    });\n  }\n\n  removeBrand(id) {\n    var confirm = window.confirm(\"Are you sure wanted to delete?\");\n\n    if (confirm) {\n      axios.get(\"http://localhost/my-app/public/api/brand/remove/\" + id).then(res => {\n        alert(\"successfully updated\");\n        console.log(\"props\", this.props);\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props.listbrand);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Manage Brand\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.props.listbrand.length > 0 ? /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }, \"Brand Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 37\n      }\n    }, \"Created Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, \"Updation Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, this.props.listbrand[0].map(el => /*#__PURE__*/React.createElement(\"tr\", {\n      key: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 49\n      }\n    }, el.BrandName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 49\n      }\n    }, el.CreationDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 49\n      }\n    }, el.UpdationDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/admin/brand/manage/edit/${el.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 53\n      }\n    }, \"update\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      onClick: () => this.removeBrand(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 53\n      }\n    }, \"Delete\")))))) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Loading\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadBrands: () => dispatch(getBrands())\n  };\n};\n\nconst mapStateToProps = state => {\n  const brands = state.brand;\n  return {\n    listbrand: brands.brands\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageBrand);","map":{"version":3,"sources":["/home/techmaven/Downloads/test-20200727T053430Z-001/test/src/components/admin/brand/managebrand.js"],"names":["React","Link","connect","getBrands","axios","ManageBrand","Component","constructor","props","removeBrand","bind","componentDidMount","console","log","listbrand","length","loadBrands","then","id","confirm","window","get","res","alert","render","map","el","BrandName","CreationDate","UpdationDate","mapDispatchToProps","dispatch","mapStateToProps","state","brands","brand"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {getBrands} from \"../../../redux/action/admin/brand/action\";\r\nimport axios from \"axios\";\r\n\r\nclass ManageBrand extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.removeBrand = this.removeBrand.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.listbrand.length)\r\n        this.props.loadBrands().then(() => {\r\n            console.log(\"listbrand:\",this.props.listbrand[0])\r\n\r\n        });\r\n    }\r\n\r\n    removeBrand(id) {\r\n        var confirm = window.confirm(\"Are you sure wanted to delete?\");\r\n        if(confirm) {\r\n            axios.get(\"http://localhost/my-app/public/api/brand/remove/\"+id).then((res) => {\r\n                alert(\"successfully updated\")\r\n                console.log(\"props\",this.props)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.props.listbrand)\r\n        return (\r\n            <div>\r\n                <h3>Manage Brand</h3>\r\n                <hr />\r\n                <div >\r\n                    {\r\n                        (this.props.listbrand.length > 0) ? (\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th scope=\"col\">Brand Name</th>\r\n                                    <th scope=\"col\">Created Date</th>\r\n                                    <th scope=\"col\">Updation Date</th>\r\n                                    <th scope=\"col\">Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        \r\n                                        this.props.listbrand[0].map( el => (\r\n                                            <tr key={el.id}>\r\n                                                <td>{el.BrandName}</td>\r\n                                                <td>{el.CreationDate}</td>\r\n                                                <td>{el.UpdationDate}</td>\r\n                                                <td>\r\n                                                    <Link to={`/admin/brand/manage/edit/${el.id}`}>update</Link>\r\n                                                    <a href=\"#\" onClick={\r\n                                                        () => this.removeBrand(el.id)\r\n                                                        }>Delete</a>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                \r\n                                \r\n                                </tbody>\r\n                            </table>\r\n\r\n                        ) : (\r\n                            <h3>Loading</h3>\r\n                        )\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps  = dispatch => {\r\n\r\n    return {\r\n        loadBrands : () => dispatch(getBrands())\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    const brands = state.brand;\r\n    return {\r\n        listbrand : brands.brands\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ManageBrand);"]},"metadata":{},"sourceType":"module"}